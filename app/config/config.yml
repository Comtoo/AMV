imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@DataBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    app.path.articles_images: /uploads/images/articles
    app.path.services_images: /uploads/images/services

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    translator : { fallback : fr }


# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    view:   { annotations: false }
    router: { annotations: true }

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: 'force'
        formats:
            xml: true
            json : true
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    routing_loader:
        default_format: json
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: UserBundle\Entity\User
    registration:
        confirmation:
            enabled: true
    from_email:
        address:        baptiste@comtoo.fr
        sender_name:    Charvet
nelmio_cors:
    defaults:
      allow_credentials: false
      allow_origin: []
      allow_headers: []
      allow_methods: []
      expose_headers: []
      max_age: 0
      hosts: []
      origin_regex: false
      forced_allow_origin_value: ~
    paths:
      '^/api/':
        allow_origin: ['*']
        allow_headers: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Cache-Control']
        allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
        max_age: 3600
      '^/':
          origin_regex: true
          allow_origin: ['*']
          allow_headers: ['Origin', 'X-Requested-With', 'Content-Type', 'Accept', 'Cache-Control']
          allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
          max_age: 3600
          hosts: ['^api\.']

lexik_jwt_authentication:
    private_key_path: %kernel.root_dir%/var/jwt/private.pem
    public_key_path:  %kernel.root_dir%/var/jwt/public.pem
    pass_phrase:      %jwt_key_pass_phrase%
    token_ttl:        3600
    user_identity_field: username

    # token encoding/decoding settings
    encoder:
        # token encoder/decoder service - default implementation based on the namshi/jose library
        service:            lexik_jwt_authentication.encoder.default
        # crypto engine used by the encoder service
        crypto_engine:  openssl
        # encryption algorithm used by the encoder service
        signature_algorithm: RS256

    # token extraction settings
    token_extractors:
        authorization_header:      # look for a token as Authorization Header
            enabled: true
            prefix:  Bearer
            name:    Authorization
        cookie:                    # check token in a cookie
            enabled: false
            name:    BEARER
        query_parameter:           # check token in query string parameter
            enabled: false
            name:    bearer

vich_uploader:
    db_driver: orm
    mappings:
        articles_images:
            uri_prefix:         %app.path.articles_images%
            upload_destination: %kernel.root_dir%/../web/uploads/images/articles
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
        services_images:
            uri_prefix:         %app.path.services_images%
            upload_destination: %kernel.root_dir%/../web/uploads/images/services
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

easy_admin:
    site_name : 'Charvet'
    design:
        menu:
            - { label: 'Articles' }
            - { label: 'Articles', icon: 'newspaper-o', entity: 'Articles' }
            - { label: 'Services et catégories'}
            - { label: 'Services', icon: 'tags', entity: 'Services'}
            - { label: 'Catégories', icon: 'tags', entity: 'Categories',  params: { sortField: 'service', sortDirection: 'ASC' }}
            - { label: 'Visuel' }
            - { label: 'Gabarits', icon: 'magic', entity: 'Gabarits' }
            - { label: 'Villes partenaire' }
            - { label: 'Villes', icon: 'building-o', entity: 'Villes' }
            - { label: 'Démarches' }
            - { label: 'Démarches', icon: 'info', entity: 'Demarches' }
            - { label: 'Utilisateur' }
            - { label: 'Utilisateur', icon: 'users', entity: 'User' }

    list:
        actions:
            - { name: 'edit', icon: 'pencil', label: '' }
            - { name: 'delete', icon: 'trash', label: '' }
    entities:
        User:
            class: UserBundle\Entity\User
            password_encoding: { algorithm: 'bcrypt', cost: 12 }
            label: 'Utilisateurs'
            list:
                title: "Liste des utilisateurs"
                fields:
                     - username
                     - { property: 'firstname', label: 'Prénom', type: 'string'}
                     - { property: 'lastname', label: 'Nom', type: 'string'}
                     - { property: 'email', label: 'Email', type: 'email'}
                     - { property: 'address', label: 'Adresse', type: 'text'}
                     - { property: 'town', label: 'Ville'}
                     - { property: 'cp', label: 'CP' }
                     - { property: 'followedtown', label: 'Villes suivie'}
                     - { property: 'followedservicecategory', label: 'Catégories suivie'}
                     - { property: 'geolocation', label: 'Géolocalisation', type: 'boolean'}
                     - { property: 'enabled', label: 'Actif', type: 'boolean'}
                     - roles
                     - lastLogin

            form:
                title: "Ajout/Modification Utilisateur"
                fields:
                     - 'username'
                     - { property: 'firstname', label: 'Prénom', type_options: { required: true }}
                     - { property: 'lastname', label: 'Nom',type_options: { required: true }}
                     - { property: 'email', label: 'Email', type: 'email'}
                     - { property: 'address', label: 'Adresse',type_options: { required: true }}
                     - { property: 'town', label: 'Ville'}
                     - { property: 'cp', label: 'CP',type_options: { required: true }}
                     - { property: 'followedtown', label: 'Villes suivie'}
                     - { property: 'followedservicecategory', label: 'Catégories suivie'}
                     - { property: 'geolocation', label: 'Géolocalisation'}
                     - { property: 'enabled', label: 'Actif'}
                      # if administrators are allowed to edit users' passwords and roles, add this:
                     - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'Utilisateur', 'ROLE_ADMIN': 'Administrateur','ROLE_CHARVET': 'Administrateur Charvet', 'ROLE_BASIC': 'Rédacteur', 'SUPER_ADMIN': 'Super admin'  } } }
                     - { property: 'password', label: 'Mot de passe',type_options: { disabled: true }}
                     - { property: 'plainPassword', label: 'Nouveau mot de passe',type_options: { required: false }}


        Articles:
            class: DataBundle\Entity\Article
            label: 'Articles'
            list :
                title: "Liste des articles"
                fields:
                    - id
                    - { property: 'title', label: 'Titre'}
                    - { property: 'content', label: 'Contenu', type: 'text'}
                    - { property: 'image', label: 'Image', type: 'image', base_path: %app.path.articles_images% }
                    - { property: 'view', label: 'Gabarit'}
                    - ville
                    - { property: 'service_cat', label: 'Catégorie'}
            form:
                title: "Ajout/Modification Article"
                fields:
                     - { property: 'title', label: 'Titre', type_options: { required: true }}
                     - { property: 'content', label: 'Contenu',type: 'ckeditor'}
                     - { property: 'imageFile', type: 'vich_image' }
                     - { property: 'view', label: 'Gabarit',type_options: { required: true }}
                     - ville
                     - { property: 'service_cat', label: 'Catégorie',type_options: { required: true }}

        Demarches:
            class: DataBundle\Entity\Demarche
            label: 'Démarches'
            list :
                title: "Liste des démarches"
                fields:
                    - id
                    - { property: 'user', label: 'Utilisateur'}
                    - { property: 'name', label: 'Titre'}
                    - { property: 'content', label: 'Contenu', type: 'text'}
                    - { property: 'dateDebut', label: 'Emis le'}
                    - { property: 'dateFin', label: 'Terminé'}
                    - { property: 'status', label: 'Etat'}
            form:
                title: "Ajout/Modification démarche"
                fields:
                    - { property: 'user', label: 'Utilisateur'}
                    - { property: 'name', label: 'Titre'}
                    - { property: 'content', label: 'Contenu', type: 'ckeditor'}
                    - { property: 'dateDebut', label: 'Emis le'}
                    - { property: 'dateFin', label: 'Terminé'}
                    - { property: 'status', label: 'Etat', type: 'choice', type_options: {choices: {'En cours':'En cours', 'En attente':'En attente','Finalisé':'Finalisé'}}}
                    - { property: 'icon', label: 'Icon', type: 'choice', type_options: {choices: { 'bulb': 'Lampe', 'basket': 'Panier', 'archive': 'Archive','ribbon':'Ruban', 'pulse':'Cardiogramme','book':'Livre'}}}

        Services:
            class: DataBundle\Entity\Service
            label: 'Services'
            list :
                title: "Liste des services"
                fields:
                    - id
                    - { property: 'name', label: 'Titre'}
                    - { property: 'color', label: 'couleur'}
                    - { property: 'image', label: 'Image', type: 'image', base_path: %app.path.services_images% }
                    - { property: 'icon', label: 'Icon'}
            form:
                title: "Ajout/Modification service"
                fields:
                    - { property: 'name', label: 'Titre'}
                    - { property: 'color', label: 'couleur'}
                    - { property: 'imageFile', type: 'vich_image' }
                    - { property: 'icon', label: 'Icon',}

        Categories:
            class: DataBundle\Entity\Service_cat
            label: 'Catégories'
            list :
                title: "Liste des catégories"
                fields:
                    - id
                    - { property: 'service', label: 'Service'}
                    - { property: 'name', label: 'Titre'}
            form:
                title: "Ajout/Modification catégorie"
                fields:
                    - { property: 'service', label: 'Service'}
                    - { property: 'name', label: 'Titre'}

        Villes:
            class: DataBundle\Entity\Ville
            label: 'Villes'
            list :
                title: "Liste des villes"
                fields:
                    - id
                    - { property: 'name', label: 'Nom'}
                    - { property: 'cp', label: 'CP'}
            form:
                title: "Ajout/Modification ville"
                fields:
                    - { property: 'name', label: 'Nom'}
                    - { property: 'cp', label: 'CP'}
        Gabarits:
            class: DataBundle\Entity\Gabarit
            label: 'Gabarits'
            list :
                title: "Liste des gabarits"
                fields:
                    - id
                    - { property: 'name', label: 'Nom'}
            form:
                title: "Ajout/Modification Gabarit"
                fields:
                    - { property: 'name', label: 'Nom'}










